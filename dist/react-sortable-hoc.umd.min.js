!(function(e, t) {
  'object' == typeof exports && 'undefined' != typeof module
    ? t(exports, require('react'), require('prop-types'), require('react-dom'))
    : 'function' == typeof define && define.amd
    ? define(['exports', 'react', 'prop-types', 'react-dom'], t)
    : t(((e = e || self).SortableHOC = {}), e.React, e.PropTypes, e.ReactDOM);
})(this, function(e, i, a, s) {
  'use strict';
  function t(e, t) {
    return e((t = {exports: {}}), t.exports), t.exports;
  }
  a = a && Object.prototype.hasOwnProperty.call(a, 'default') ? a.default : a;
  var l = t(function(e) {
    function t() {
      return (
        (e.exports = t =
          Object.assign ||
          function(e) {
            for (var t = 1; t < arguments.length; t++) {
              var n = arguments[t];
              for (var r in n)
                Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
            }
            return e;
          }),
        t.apply(this, arguments)
      );
    }
    e.exports = t;
  });
  var n = function(e) {
    if (Array.isArray(e)) return e;
  };
  var r = function(e, t) {
    if ('undefined' != typeof Symbol && Symbol.iterator in Object(e)) {
      var n = [],
        r = !0,
        o = !1,
        i = void 0;
      try {
        for (
          var a, s = e[Symbol.iterator]();
          !(r = (a = s.next()).done) && (n.push(a.value), !t || n.length !== t);
          r = !0
        );
      } catch (e) {
        (o = !0), (i = e);
      } finally {
        try {
          r || null == s.return || s.return();
        } finally {
          if (o) throw i;
        }
      }
      return n;
    }
  };
  var o = function(e, t) {
    (null == t || t > e.length) && (t = e.length);
    for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
    return r;
  };
  var c = function(e, t) {
    if (e) {
      if ('string' == typeof e) return o(e, t);
      var n = Object.prototype.toString.call(e).slice(8, -1);
      return (
        'Object' === n && e.constructor && (n = e.constructor.name),
        'Map' === n || 'Set' === n
          ? Array.from(e)
          : 'Arguments' === n ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          ? o(e, t)
          : void 0
      );
    }
  };
  var u = function() {
    throw new TypeError(
      'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
    );
  };
  var b = function(e, t) {
    return n(e) || r(e, t) || c(e, t) || u();
  };
  var f = function(e, t) {
    if (!(e instanceof t))
      throw new TypeError('Cannot call a class as a function');
  };
  function d(e, t) {
    for (var n = 0; n < t.length; n++) {
      var r = t[n];
      (r.enumerable = r.enumerable || !1),
        (r.configurable = !0),
        'value' in r && (r.writable = !0),
        Object.defineProperty(e, r.key, r);
    }
  }
  var h = function(e, t, n) {
    return t && d(e.prototype, t), n && d(e, n), e;
  };
  var p = function(e) {
      if (void 0 === e)
        throw new ReferenceError(
          "this hasn't been initialised - super() hasn't been called",
        );
      return e;
    },
    y = t(function(n) {
      function r(e, t) {
        return (
          (n.exports = r =
            Object.setPrototypeOf ||
            function(e, t) {
              return (e.__proto__ = t), e;
            }),
          r(e, t)
        );
      }
      n.exports = r;
    });
  var g = function(e, t) {
      if ('function' != typeof t && null !== t)
        throw new TypeError(
          'Super expression must either be null or a function',
        );
      (e.prototype = Object.create(t && t.prototype, {
        constructor: {value: e, writable: !0, configurable: !0},
      })),
        t && y(e, t);
    },
    v = t(function(t) {
      function n(e) {
        return (
          'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
            ? (t.exports = n = function(e) {
                return typeof e;
              })
            : (t.exports = n = function(e) {
                return e &&
                  'function' == typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? 'symbol'
                  : typeof e;
              }),
          n(e)
        );
      }
      t.exports = n;
    });
  var m = function(e, t) {
      return !t || ('object' !== v(t) && 'function' != typeof t) ? p(e) : t;
    },
    x = t(function(t) {
      function n(e) {
        return (
          (t.exports = n = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              }),
          n(e)
        );
      }
      t.exports = n;
    });
  var w = function(e, t, n) {
      return (
        t in e
          ? Object.defineProperty(e, t, {
              value: n,
              enumerable: !0,
              configurable: !0,
              writable: !0,
            })
          : (e[t] = n),
        e
      );
    },
    S = function(e, t, n, r, o, i, a, s) {
      if (!e) {
        var l;
        if (void 0 === t)
          l = new Error(
            'Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.',
          );
        else {
          var c = [n, r, o, i, a, s],
            u = 0;
          (l = new Error(
            t.replace(/%s/g, function() {
              return c[u++];
            }),
          )).name = 'Invariant Violation';
        }
        throw ((l.framesToPop = 1), l);
      }
    },
    O = (function() {
      function e() {
        f(this, e), w(this, 'refs', {});
      }
      return (
        h(e, [
          {
            key: 'add',
            value: function(e, t) {
              this.refs[e] || (this.refs[e] = []), this.refs[e].push(t);
            },
          },
          {
            key: 'remove',
            value: function(e, t) {
              var n = this.getIndex(e, t);
              -1 !== n && this.refs[e].splice(n, 1);
            },
          },
          {
            key: 'isActive',
            value: function() {
              return this.active;
            },
          },
          {
            key: 'getActive',
            value: function() {
              var t = this;
              return this.refs[this.active.collection].find(function(e) {
                return e.node.sortableInfo.index == t.active.index;
              });
            },
          },
          {
            key: 'getIndex',
            value: function(e, t) {
              return this.refs[e].indexOf(t);
            },
          },
          {
            key: 'getOrderedRefs',
            value: function() {
              var e =
                0 < arguments.length && void 0 !== arguments[0]
                  ? arguments[0]
                  : this.active.collection;
              return this.refs[e].sort(C);
            },
          },
        ]),
        e
      );
    })();
  function C(e, t) {
    return e.node.sortableInfo.index - t.node.sortableInfo.index;
  }
  var T = function(e) {
    if (Array.isArray(e)) return o(e);
  };
  var I = function(e) {
    if ('undefined' != typeof Symbol && Symbol.iterator in Object(e))
      return Array.from(e);
  };
  var k = function() {
    throw new TypeError(
      'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
    );
  };
  var R = function(e) {
    return T(e) || I(e) || c(e) || k();
  };
  function E(n, r) {
    return Object.keys(n).reduce(function(e, t) {
      return -1 === r.indexOf(t) && (e[t] = n[t]), e;
    }, {});
  }
  var j = {
      end: ['touchend', 'touchcancel', 'mouseup'],
      move: ['touchmove', 'mousemove'],
      start: ['touchstart', 'mousedown'],
    },
    D = (function() {
      if ('undefined' == typeof window || 'undefined' == typeof document)
        return '';
      var e = window.getComputedStyle(document.documentElement, '') || [
          '-moz-hidden-iframe',
        ],
        t = (Array.prototype.slice
          .call(e)
          .join('')
          .match(/-(moz|webkit|ms)-/) ||
          ('' === e.OLink && ['', 'o']))[1];
      switch (t) {
        case 'ms':
          return 'ms';
        default:
          return t && t.length ? t[0].toUpperCase() + t.substr(1) : '';
      }
    })();
  function A(t, n) {
    Object.keys(n).forEach(function(e) {
      t.style[e] = n[e];
    });
  }
  function N(e, t) {
    e.style[''.concat(D, 'Transform')] =
      null == t ? '' : 'translate3d('.concat(t.x, 'px,').concat(t.y, 'px,0)');
  }
  function M(e, t) {
    e.style[''.concat(D, 'TransitionDuration')] =
      null == t ? '' : ''.concat(t, 'ms');
  }
  function P(e, t) {
    for (; e; ) {
      if (t(e)) return e;
      e = e.parentNode;
    }
    return null;
  }
  function W(e, t, n) {
    return Math.max(e, Math.min(n, t));
  }
  function L(e) {
    return 'px' === e.substr(-2) ? parseFloat(e) : 0;
  }
  function H(e, t) {
    var n = t.displayName || t.name;
    return n ? ''.concat(e, '(').concat(n, ')') : e;
  }
  function K(e, t) {
    var n = e.getBoundingClientRect();
    return {top: n.top + t.top, left: n.left + t.left};
  }
  function G(e) {
    return e.touches && e.touches.length
      ? {x: e.touches[0].pageX, y: e.touches[0].pageY}
      : e.changedTouches && e.changedTouches.length
      ? {x: e.changedTouches[0].pageX, y: e.changedTouches[0].pageY}
      : {x: e.pageX, y: e.pageY};
  }
  function _(e, t) {
    var n =
      2 < arguments.length && void 0 !== arguments[2]
        ? arguments[2]
        : {left: 0, top: 0};
    if (e) {
      var r = {left: n.left + e.offsetLeft, top: n.top + e.offsetTop};
      return e.parentNode === t ? r : _(e.parentNode, t, r);
    }
  }
  function B(e) {
    var t = e.lockOffset,
      n = e.width,
      r = e.height,
      o = t,
      i = t,
      a = 'px';
    if ('string' == typeof t) {
      var s = /^[+-]?\d*(?:\.\d*)?(px|%)$/.exec(t);
      S(
        null !== s,
        'lockOffset value should be a number or a string of a number followed by "px" or "%". Given %s',
        t,
      ),
        (o = parseFloat(t)),
        (i = parseFloat(t)),
        (a = s[1]);
    }
    return (
      S(
        isFinite(o) && isFinite(i),
        'lockOffset value should be a finite. Given %s',
        t,
      ),
      '%' === a && ((o = (o * n) / 100), (i = (i * r) / 100)),
      {x: o, y: i}
    );
  }
  function X(e) {
    return e instanceof HTMLElement
      ? ((t = e),
        (n = window.getComputedStyle(t)),
        (r = /(auto|scroll)/),
        ['overflow', 'overflowX', 'overflowY'].find(function(e) {
          return r.test(n[e]);
        })
          ? e
          : X(e.parentNode))
      : null;
    var t, n, r;
  }
  var Y = 27,
    U = 32,
    q = 37,
    F = 38,
    V = 39,
    z = 40,
    $ = {
      Anchor: 'A',
      Button: 'BUTTON',
      Canvas: 'CANVAS',
      Input: 'INPUT',
      Option: 'OPTION',
      Textarea: 'TEXTAREA',
      Select: 'SELECT',
    };
  function J(r) {
    var o = (function() {
      if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
      if (Reflect.construct.sham) return !1;
      if ('function' == typeof Proxy) return !0;
      try {
        return (
          Date.prototype.toString.call(
            Reflect.construct(Date, [], function() {}),
          ),
          !0
        );
      } catch (e) {
        return !1;
      }
    })();
    return function() {
      var e,
        t = x(r);
      if (o) {
        var n = x(this).constructor;
        e = Reflect.construct(t, arguments, n);
      } else e = t.apply(this, arguments);
      return m(this, e);
    };
  }
  function Q(r) {
    var e,
      t,
      o =
        1 < arguments.length && void 0 !== arguments[1]
          ? arguments[1]
          : {withRef: !1};
    return (
      (t = e = (function(e) {
        g(n, e);
        var t = J(n);
        function n() {
          return f(this, n), t.apply(this, arguments);
        }
        return (
          h(n, [
            {
              key: 'componentDidMount',
              value: function() {
                s.findDOMNode(this).sortableHandle = !0;
              },
            },
            {
              key: 'getWrappedInstance',
              value: function() {
                return (
                  S(
                    o.withRef,
                    'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableHandle() call',
                  ),
                  this.refs.wrappedInstance
                );
              },
            },
            {
              key: 'render',
              value: function() {
                var e = o.withRef ? 'wrappedInstance' : null;
                return i.createElement(r, l({ref: e}, this.props));
              },
            },
          ]),
          n
        );
      })(i.Component)),
      w(e, 'displayName', H('sortableHandle', r)),
      t
    );
  }
  function Z(e) {
    return null != e.sortableHandle;
  }
  var ee = (function() {
    function o(e, t, n, r) {
      f(this, o),
        (this.container = e),
        (this.onScrollCallback = t),
        (this.scrollXStartDistance = n),
        (this.scrollYStartDistance = r);
    }
    return (
      h(o, [
        {
          key: 'clear',
          value: function() {
            null != this.interval &&
              (clearInterval(this.interval), (this.interval = null));
          },
        },
        {
          key: 'update',
          value: function(e) {
            var t = this,
              n = e.translate,
              r = e.minTranslate,
              o = e.maxTranslate,
              i = e.width,
              a = e.height,
              s = this.scrollXStartDistance,
              l = this.scrollYStartDistance,
              c = {x: 0, y: 0},
              u = {x: 1, y: 1},
              f = 10,
              d = 10,
              h = this.container,
              p = h.scrollTop,
              y = h.scrollLeft,
              g = h.scrollHeight,
              v = h.scrollWidth,
              m = 0 === p,
              x = g - p - h.clientHeight == 0,
              b = 0 === y,
              w = v - y - h.clientWidth == 0;
            n.y >= o.y - a / 2 - l && !x
              ? ((c.y = 1), (u.y = d * Math.abs((o.y - a / 2 - n.y) / a)))
              : n.x >= o.x - i / 2 - s && !w
              ? ((c.x = 1), (u.x = f * Math.abs((o.x - i / 2 - n.x) / i)))
              : n.y <= r.y + a / 2 + l && !m
              ? ((c.y = -1), (u.y = d * Math.abs((n.y - a / 2 - r.y) / a)))
              : n.x <= r.x + i / 2 + s &&
                !b &&
                ((c.x = -1), (u.x = f * Math.abs((n.x - i / 2 - r.x) / i))),
              this.interval && (this.clear(), (this.isAutoScrolling = !1)),
              (0 === c.x && 0 === c.y) ||
                (this.interval = setInterval(function() {
                  t.isAutoScrolling = !0;
                  var e = {left: u.x * c.x, top: u.y * c.y};
                  (t.container.scrollTop += e.top),
                    (t.container.scrollLeft += e.left),
                    t.onScrollCallback(e);
                }, 5));
          },
        },
      ]),
      o
    );
  })();
  var te = {
      axis: a.oneOf(['x', 'y', 'xy']),
      contentWindow: a.any,
      disableAutoscroll: a.bool,
      distance: a.number,
      getContainer: a.func,
      getHelperDimensions: a.func,
      helperClass: a.string,
      helperContainer: a.oneOfType([
        a.func,
        'undefined' == typeof HTMLElement ? a.any : a.instanceOf(HTMLElement),
      ]),
      hideSortableGhost: a.bool,
      keyboardSortingTransitionDuration: a.number,
      lockAxis: a.string,
      lockOffset: a.oneOfType([
        a.number,
        a.string,
        a.arrayOf(a.oneOfType([a.number, a.string])),
      ]),
      lockToContainerEdges: a.bool,
      onSortEnd: a.func,
      onSortMove: a.func,
      onSortOver: a.func,
      onSortStart: a.func,
      pressDelay: a.number,
      pressThreshold: a.number,
      keyCodes: a.shape({
        lift: a.arrayOf(a.number),
        drop: a.arrayOf(a.number),
        cancel: a.arrayOf(a.number),
        up: a.arrayOf(a.number),
        down: a.arrayOf(a.number),
      }),
      shouldCancelStart: a.func,
      transitionDuration: a.number,
      updateBeforeSortStart: a.func,
      useDragHandle: a.bool,
      useWindowAsScrollContainer: a.bool,
      scrollXStartDistance: a.number,
      scrollYStartDistance: a.number,
    },
    ne = {lift: [U], drop: [U], cancel: [Y], up: [F, q], down: [z, V]},
    re = {
      axis: 'y',
      disableAutoscroll: !1,
      distance: 0,
      getHelperDimensions: function(e) {
        var t = e.node;
        return {height: t.offsetHeight, width: t.offsetWidth};
      },
      hideSortableGhost: !0,
      lockOffset: '50%',
      lockToContainerEdges: !1,
      pressDelay: 0,
      pressThreshold: 5,
      keyCodes: ne,
      shouldCancelStart: function(e) {
        return (
          -1 !==
            [$.Input, $.Textarea, $.Select, $.Option, $.Button].indexOf(
              e.target.tagName,
            ) ||
          !!P(e.target, function(e) {
            return 'true' === e.contentEditable;
          })
        );
      },
      transitionDuration: 300,
      useWindowAsScrollContainer: !1,
      scrollXStartDistance: 0,
      scrollYStartDistance: 0,
    },
    oe = Object.keys(te);
  function ie(t, e) {
    var n = Object.keys(t);
    if (Object.getOwnPropertySymbols) {
      var r = Object.getOwnPropertySymbols(t);
      e &&
        (r = r.filter(function(e) {
          return Object.getOwnPropertyDescriptor(t, e).enumerable;
        })),
        n.push.apply(n, r);
    }
    return n;
  }
  function ae(t) {
    for (var e = 1; e < arguments.length; e++) {
      var n = null != arguments[e] ? arguments[e] : {};
      e % 2
        ? ie(Object(n), !0).forEach(function(e) {
            w(t, e, n[e]);
          })
        : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
        : ie(Object(n)).forEach(function(e) {
            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e));
          });
    }
    return t;
  }
  function se(r) {
    var o = (function() {
      if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
      if (Reflect.construct.sham) return !1;
      if ('function' == typeof Proxy) return !0;
      try {
        return (
          Date.prototype.toString.call(
            Reflect.construct(Date, [], function() {}),
          ),
          !0
        );
      } catch (e) {
        return !1;
      }
    })();
    return function() {
      var e,
        t = x(r);
      if (o) {
        var n = x(this).constructor;
        e = Reflect.construct(t, arguments, n);
      } else e = t.apply(this, arguments);
      return m(this, e);
    };
  }
  function le(t) {
    var e,
      n,
      o =
        1 < arguments.length && void 0 !== arguments[1]
          ? arguments[1]
          : {withRef: !1};
    return (
      (n = e = (function(e) {
        g(r, e);
        var n = se(r);
        function r(e) {
          var D, t;
          return (
            f(this, r),
            (D = n.call(this, e)),
            w(p(D), 'state', {}),
            w(p(D), 'handleStart', function(e) {
              var t = D.props,
                n = t.distance,
                r = t.shouldCancelStart;
              if (2 !== e.button && !r(e)) {
                (D.touched = !0), (D.position = G(e));
                var o,
                  i = P(e.target, function(e) {
                    return null != e.sortableInfo;
                  });
                if (
                  i &&
                  i.sortableInfo &&
                  D.nodeIsChild(i) &&
                  !D.state.sorting
                ) {
                  var a = D.props.useDragHandle,
                    s = i.sortableInfo,
                    l = s.index,
                    c = s.collection;
                  if (s.disabled) return;
                  if (a && !P(e.target, Z)) return;
                  (D.manager.active = {collection: c, index: l}),
                    ((o = e).touches && o.touches.length) ||
                      (o.changedTouches && o.changedTouches.length) ||
                      e.target.tagName !== $.Anchor ||
                      e.preventDefault(),
                    n ||
                      (0 === D.props.pressDelay
                        ? D.handlePress(e)
                        : (D.pressTimer = setTimeout(function() {
                            return D.handlePress(e);
                          }, D.props.pressDelay)));
                }
              }
            }),
            w(p(D), 'nodeIsChild', function(e) {
              return e.sortableInfo.manager === D.manager;
            }),
            w(p(D), 'handleMove', function(e) {
              var t = D.props,
                n = t.distance,
                r = t.pressThreshold;
              if (
                !D.state.sorting &&
                D.touched &&
                !D._awaitingUpdateBeforeSortStart
              ) {
                var o = G(e),
                  i = {x: D.position.x - o.x, y: D.position.y - o.y},
                  a = Math.abs(i.x) + Math.abs(i.y);
                (D.delta = i),
                  n || (r && !(r <= a))
                    ? n && n <= a && D.manager.isActive() && D.handlePress(e)
                    : (clearTimeout(D.cancelTimer),
                      (D.cancelTimer = setTimeout(D.cancel, 0)));
              }
            }),
            w(p(D), 'handleEnd', function() {
              (D.touched = !1), D.cancel();
            }),
            w(p(D), 'cancel', function() {
              var e = D.props.distance;
              D.state.sorting ||
                (e || clearTimeout(D.pressTimer), (D.manager.active = null));
            }),
            w(p(D), 'handlePress', function(E) {
              try {
                var o = D.manager.getActive(),
                  e = (function() {
                    if (o) {
                      var e = function() {
                          var e,
                            t,
                            n,
                            r,
                            o,
                            i,
                            a,
                            s,
                            l = T.sortableInfo.index,
                            c =
                              ((e = T),
                              {
                                bottom: L(
                                  (t = window.getComputedStyle(e)).marginBottom,
                                ),
                                left: L(t.marginLeft),
                                right: L(t.marginRight),
                                top: L(t.marginTop),
                              }),
                            u =
                              ((n = D.container),
                              'grid' ===
                              (r = window.getComputedStyle(n)).display
                                ? {x: L(r.gridColumnGap), y: L(r.gridRowGap)}
                                : {x: 0, y: 0}),
                            f = D.scrollContainer.getBoundingClientRect(),
                            d = b({index: l, node: T, collection: I});
                          if (
                            ((D.node = T),
                            (D.margin = c),
                            (D.gridGap = u),
                            (D.width = d.width),
                            (D.height = d.height),
                            (D.marginOffset = {
                              x: D.margin.left + D.margin.right + D.gridGap.x,
                              y: Math.max(
                                D.margin.top,
                                D.margin.bottom,
                                D.gridGap.y,
                              ),
                            }),
                            (D.boundingClientRect = T.getBoundingClientRect()),
                            (D.containerBoundingRect = f),
                            (D.index = l),
                            (D.newIndex = l),
                            (D.axis = {
                              x: 0 <= x.indexOf('x'),
                              y: 0 <= x.indexOf('y'),
                            }),
                            (D.offsetEdge = _(T, D.container)),
                            (D.initialOffset = G(
                              k
                                ? ae(
                                    ae({}, E),
                                    {},
                                    {
                                      pageX: D.boundingClientRect.left,
                                      pageY: D.boundingClientRect.top,
                                    },
                                  )
                                : E,
                            )),
                            (D.initialScroll = {
                              left: D.scrollContainer.scrollLeft,
                              top: D.scrollContainer.scrollTop,
                            }),
                            (D.initialWindowScroll = {
                              left: window.pageXOffset,
                              top: window.pageYOffset,
                            }),
                            (D.helper = D.helperContainer.appendChild(
                              ((i =
                                'input, textarea, select, canvas, [contenteditable]'),
                              (a = (o = T).querySelectorAll(i)),
                              (s = o.cloneNode(!0)),
                              R(s.querySelectorAll(i)).forEach(function(e, t) {
                                'file' !== e.type && (e.value = a[t].value),
                                  'radio' === e.type &&
                                    e.name &&
                                    (e.name = '__sortableClone__'.concat(
                                      e.name,
                                    )),
                                  e.tagName === $.Canvas &&
                                    0 < a[t].width &&
                                    0 < a[t].height &&
                                    e.getContext('2d').drawImage(a[t], 0, 0);
                              }),
                              s),
                            )),
                            A(D.helper, {
                              boxSizing: 'border-box',
                              height: ''.concat(D.height, 'px'),
                              left: ''.concat(
                                D.boundingClientRect.left - c.left,
                                'px',
                              ),
                              pointerEvents: 'none',
                              position: 'fixed',
                              top: ''.concat(
                                D.boundingClientRect.top - c.top,
                                'px',
                              ),
                              width: ''.concat(D.width, 'px'),
                            }),
                            k && D.helper.focus(),
                            S &&
                              A((D.sortableGhost = T), {
                                opacity: 0,
                                visibility: 'hidden',
                              }),
                            (D.minTranslate = {}),
                            (D.maxTranslate = {}),
                            k)
                          ) {
                            var h = C
                                ? {
                                    top: 0,
                                    left: 0,
                                    width: D.contentWindow.innerWidth,
                                    height: D.contentWindow.innerHeight,
                                  }
                                : D.containerBoundingRect,
                              p = h.top,
                              y = h.left,
                              g = h.width,
                              v = p + h.height,
                              m = y + g;
                            D.axis.x &&
                              ((D.minTranslate.x =
                                y - D.boundingClientRect.left),
                              (D.maxTranslate.x =
                                m - (D.boundingClientRect.left + D.width))),
                              D.axis.y &&
                                ((D.minTranslate.y =
                                  p - D.boundingClientRect.top),
                                (D.maxTranslate.y =
                                  v - (D.boundingClientRect.top + D.height)));
                          } else
                            D.axis.x &&
                              ((D.minTranslate.x =
                                (C ? 0 : f.left) -
                                D.boundingClientRect.left -
                                D.width / 2),
                              (D.maxTranslate.x =
                                (C
                                  ? D.contentWindow.innerWidth
                                  : f.left + f.width) -
                                D.boundingClientRect.left -
                                D.width / 2)),
                              D.axis.y &&
                                ((D.minTranslate.y =
                                  (C ? 0 : f.top) -
                                  D.boundingClientRect.top -
                                  D.height / 2),
                                (D.maxTranslate.y =
                                  (C
                                    ? D.contentWindow.innerHeight
                                    : f.top + f.height) -
                                  D.boundingClientRect.top -
                                  D.height / 2));
                          w &&
                            w.split(' ').forEach(function(e) {
                              return D.helper.classList.add(e);
                            }),
                            (D.listenerNode = E.touches ? T : D.contentWindow),
                            k
                              ? (D.listenerNode.addEventListener(
                                  'wheel',
                                  D.handleKeyEnd,
                                  !0,
                                ),
                                D.listenerNode.addEventListener(
                                  'mousedown',
                                  D.handleKeyEnd,
                                  !0,
                                ),
                                D.listenerNode.addEventListener(
                                  'keydown',
                                  D.handleKeyDown,
                                ))
                              : (j.move.forEach(function(e) {
                                  return D.listenerNode.addEventListener(
                                    e,
                                    D.handleSortMove,
                                    !1,
                                  );
                                }),
                                j.end.forEach(function(e) {
                                  return D.listenerNode.addEventListener(
                                    e,
                                    D.handleSortEnd,
                                    !1,
                                  );
                                })),
                            D.setState({sorting: !0, sortingIndex: l}),
                            O &&
                              O(
                                {
                                  node: T,
                                  index: l,
                                  collection: I,
                                  isKeySorting: k,
                                  nodes: D.manager.getOrderedRefs(),
                                  helper: D.helper,
                                },
                                E,
                              ),
                            k && D.keyMove(0);
                        },
                        t = D.props,
                        x = t.axis,
                        b = t.getHelperDimensions,
                        w = t.helperClass,
                        S = t.hideSortableGhost,
                        n = t.updateBeforeSortStart,
                        O = t.onSortStart,
                        C = t.useWindowAsScrollContainer,
                        T = o.node,
                        I = o.collection,
                        k = D.manager.isKeySorting,
                        r = (function() {
                          if ('function' == typeof n) {
                            D._awaitingUpdateBeforeSortStart = !0;
                            var e = (function(e, t) {
                              try {
                                var n = e();
                              } catch (e) {
                                return t(!0, e);
                              }
                              return n && n.then
                                ? n.then(t.bind(null, !1), t.bind(null, !0))
                                : t(!1, n);
                            })(
                              function() {
                                var e = T.sortableInfo.index;
                                return Promise.resolve(
                                  n(
                                    {
                                      collection: I,
                                      index: e,
                                      node: T,
                                      isKeySorting: k,
                                    },
                                    E,
                                  ),
                                ).then(function() {});
                              },
                              function(e, t) {
                                if (
                                  ((D._awaitingUpdateBeforeSortStart = !1), e)
                                )
                                  throw t;
                                return t;
                              },
                            );
                            if (e && e.then) return e.then(function() {});
                          }
                        })();
                      return r && r.then ? r.then(e) : e();
                    }
                  })();
                return Promise.resolve(
                  e && e.then ? e.then(function() {}) : void 0,
                );
              } catch (e) {
                return Promise.reject(e);
              }
            }),
            w(p(D), 'handleSortMove', function(e) {
              var t = D.props.onSortMove;
              'function' == typeof e.preventDefault && e.preventDefault(),
                D.updateHelperPosition(e),
                D.animateNodes(),
                D.autoscroll(),
                t && t(e);
            }),
            w(p(D), 'handleSortEnd', function(e) {
              var t = D.props,
                n = t.hideSortableGhost,
                r = t.onSortEnd,
                o = D.manager,
                i = o.active.collection,
                a = o.isKeySorting,
                s = D.manager.getOrderedRefs();
              D.listenerNode &&
                (a
                  ? (D.listenerNode.removeEventListener(
                      'wheel',
                      D.handleKeyEnd,
                      !0,
                    ),
                    D.listenerNode.removeEventListener(
                      'mousedown',
                      D.handleKeyEnd,
                      !0,
                    ),
                    D.listenerNode.removeEventListener(
                      'keydown',
                      D.handleKeyDown,
                    ))
                  : (j.move.forEach(function(e) {
                      return D.listenerNode.removeEventListener(
                        e,
                        D.handleSortMove,
                      );
                    }),
                    j.end.forEach(function(e) {
                      return D.listenerNode.removeEventListener(
                        e,
                        D.handleSortEnd,
                      );
                    }))),
                D.helper.parentNode.removeChild(D.helper),
                n &&
                  D.sortableGhost &&
                  A(D.sortableGhost, {opacity: '', visibility: ''});
              for (var l = 0, c = s.length; l < c; l++) {
                var u = s[l],
                  f = u.node;
                (u.edgeOffset = null),
                  N(f, (u.boundingClientRect = null)),
                  M(f, null),
                  (u.translate = null);
              }
              D.autoScroller.clear(),
                (D.manager.active = null),
                (D.manager.isKeySorting = !1),
                D.setState({sorting: !1, sortingIndex: null}),
                'function' == typeof r &&
                  r(
                    {
                      collection: i,
                      newIndex: D.newIndex,
                      oldIndex: D.index,
                      isKeySorting: a,
                      nodes: s,
                    },
                    e,
                  ),
                (D.touched = !1);
            }),
            w(p(D), 'autoscroll', function() {
              var e = D.props.disableAutoscroll,
                t = D.manager.isKeySorting;
              if (e) D.autoScroller.clear();
              else {
                if (t) {
                  var n = ae({}, D.translate),
                    r = 0,
                    o = 0;
                  return (
                    D.axis.x &&
                      ((n.x = Math.min(
                        D.maxTranslate.x,
                        Math.max(D.minTranslate.x, D.translate.x),
                      )),
                      (r = D.translate.x - n.x)),
                    D.axis.y &&
                      ((n.y = Math.min(
                        D.maxTranslate.y,
                        Math.max(D.minTranslate.y, D.translate.y),
                      )),
                      (o = D.translate.y - n.y)),
                    (D.translate = n),
                    N(D.helper, D.translate),
                    (D.scrollContainer.scrollLeft += r),
                    void (D.scrollContainer.scrollTop += o)
                  );
                }
                D.autoScroller.update({
                  height: D.height,
                  maxTranslate: D.maxTranslate,
                  minTranslate: D.minTranslate,
                  translate: D.translate,
                  width: D.width,
                });
              }
            }),
            w(p(D), 'onAutoScroll', function(e) {
              (D.translate.x += e.left),
                (D.translate.y += e.top),
                D.animateNodes();
            }),
            w(p(D), 'handleKeyDown', function(e) {
              var t = e.keyCode,
                n = D.props,
                r = n.shouldCancelStart,
                o = n.keyCodes,
                i = void 0 === o ? {} : o,
                a = ae(ae({}, ne), i);
              (D.manager.active && !D.manager.isKeySorting) ||
                !(
                  D.manager.active ||
                  (a.lift.includes(t) && !r(e) && D.isValidSortingTarget(e))
                ) ||
                (e.stopPropagation(),
                e.preventDefault(),
                a.lift.includes(t) && !D.manager.active
                  ? D.keyLift(e)
                  : a.drop.includes(t) && D.manager.active
                  ? D.keyDrop(e)
                  : a.cancel.includes(t)
                  ? ((D.newIndex = D.manager.active.index), D.keyDrop(e))
                  : a.up.includes(t)
                  ? D.keyMove(-1)
                  : a.down.includes(t) && D.keyMove(1));
            }),
            w(p(D), 'keyLift', function(e) {
              var t = e.target,
                n = P(t, function(e) {
                  return null != e.sortableInfo;
                }).sortableInfo,
                r = n.index,
                o = n.collection;
              (D.initialFocusedNode = t),
                (D.manager.isKeySorting = !0),
                (D.manager.active = {index: r, collection: o}),
                D.handlePress(e);
            }),
            w(p(D), 'keyMove', function(e) {
              var t = D.manager.getOrderedRefs(),
                n = t[t.length - 1].node.sortableInfo.index,
                r = D.newIndex + e,
                o = D.newIndex;
              if (!(r < 0 || n < r)) {
                (D.prevIndex = o), (D.newIndex = r);
                var i,
                  a,
                  s,
                  l =
                    ((i = D.newIndex),
                    (a = D.prevIndex),
                    (s = D.index),
                    i < s && a < i ? i - 1 : s < i && i < a ? i + 1 : i),
                  c = t.find(function(e) {
                    return e.node.sortableInfo.index === l;
                  }),
                  u = c.node,
                  f = D.containerScrollDelta,
                  d = c.boundingClientRect || K(u, f),
                  h = c.translate || {x: 0, y: 0},
                  p = d.top + h.y - f.top,
                  y = d.left + h.x - f.left,
                  g = o < r,
                  v = g && D.axis.x ? u.offsetWidth - D.width : 0,
                  m = g && D.axis.y ? u.offsetHeight - D.height : 0;
                D.handleSortMove({
                  pageX: y + v,
                  pageY: p + m,
                  ignoreTransition: 0 === e,
                });
              }
            }),
            w(p(D), 'keyDrop', function(e) {
              D.handleSortEnd(e),
                D.initialFocusedNode && D.initialFocusedNode.focus();
            }),
            w(p(D), 'handleKeyEnd', function(e) {
              D.manager.active && D.keyDrop(e);
            }),
            w(p(D), 'isValidSortingTarget', function(e) {
              var t = D.props.useDragHandle,
                n = e.target,
                r = P(n, function(e) {
                  return null != e.sortableInfo;
                });
              return (
                r &&
                r.sortableInfo &&
                !r.sortableInfo.disabled &&
                (t ? Z(n) : n.sortableInfo)
              );
            }),
            S(
              !((t = e).distance && t.pressDelay),
              'Attempted to set both `pressDelay` and `distance` on SortableContainer, you may only use one or the other, not both at the same time.',
            ),
            (D.manager = new O()),
            (D.events = {
              end: D.handleEnd,
              move: D.handleMove,
              start: D.handleStart,
            }),
            D
          );
        }
        return (
          h(r, [
            {
              key: 'getChildContext',
              value: function() {
                return {manager: this.manager};
              },
            },
            {
              key: 'componentDidMount',
              value: function() {
                var n = this,
                  e = this.props,
                  r = e.useWindowAsScrollContainer,
                  o = e.scrollXStartDistance,
                  i = e.scrollYStartDistance,
                  t = this.getContainer();
                Promise.resolve(t).then(function(e) {
                  (n.container = e),
                    (n.document = n.container.ownerDocument || document);
                  var t =
                    n.props.contentWindow || n.document.defaultView || window;
                  (n.contentWindow = 'function' == typeof t ? t() : t),
                    (n.scrollContainer = r
                      ? n.document.scrollingElement ||
                        n.document.documentElement
                      : X(n.container) || n.container),
                    (n.autoScroller = new ee(
                      n.scrollContainer,
                      n.onAutoScroll,
                      o,
                      i,
                    )),
                    Object.keys(n.events).forEach(function(t) {
                      return j[t].forEach(function(e) {
                        return n.container.addEventListener(e, n.events[t], !1);
                      });
                    }),
                    n.container.addEventListener('keydown', n.handleKeyDown);
                });
              },
            },
            {
              key: 'componentWillUnmount',
              value: function() {
                var n = this;
                this.helper &&
                  this.helper.parentNode &&
                  this.helper.parentNode.removeChild(this.helper),
                  this.container &&
                    (Object.keys(this.events).forEach(function(t) {
                      return j[t].forEach(function(e) {
                        return n.container.removeEventListener(e, n.events[t]);
                      });
                    }),
                    this.container.removeEventListener(
                      'keydown',
                      this.handleKeyDown,
                    ));
              },
            },
            {
              key: 'updateHelperPosition',
              value: function(e) {
                var t = this.props,
                  n = t.lockAxis,
                  r = t.lockOffset,
                  o = t.lockToContainerEdges,
                  i = t.transitionDuration,
                  a = t.keyboardSortingTransitionDuration,
                  s = void 0 === a ? i : a,
                  l = this.manager.isKeySorting,
                  c = e.ignoreTransition,
                  u = G(e),
                  f = {
                    x: u.x - this.initialOffset.x,
                    y: u.y - this.initialOffset.y,
                  };
                if (
                  ((f.y -= window.pageYOffset - this.initialWindowScroll.top),
                  (f.x -= window.pageXOffset - this.initialWindowScroll.left),
                  (this.translate = f),
                  o)
                ) {
                  var d = (function(e) {
                      var t = e.height,
                        n = e.width,
                        r = e.lockOffset,
                        o = Array.isArray(r) ? r : [r, r];
                      S(
                        2 === o.length,
                        'lockOffset prop of SortableContainer should be a single value or an array of exactly two values. Given %s',
                        r,
                      );
                      var i = b(o, 2),
                        a = i[0],
                        s = i[1];
                      return [
                        B({height: t, lockOffset: a, width: n}),
                        B({height: t, lockOffset: s, width: n}),
                      ];
                    })({height: this.height, lockOffset: r, width: this.width}),
                    h = b(d, 2),
                    p = h[0],
                    y = h[1],
                    g = this.width / 2 - p.x,
                    v = this.height / 2 - p.y,
                    m = this.width / 2 - y.x,
                    x = this.height / 2 - y.y;
                  (f.x = W(
                    this.minTranslate.x + g,
                    this.maxTranslate.x - m,
                    f.x,
                  )),
                    (f.y = W(
                      this.minTranslate.y + v,
                      this.maxTranslate.y - x,
                      f.y,
                    ));
                }
                'x' === n ? (f.y = 0) : 'y' === n && (f.x = 0),
                  l && s && !c && M(this.helper, s),
                  N(this.helper, f);
              },
            },
            {
              key: 'animateNodes',
              value: function() {
                var e = this.props,
                  t = e.transitionDuration,
                  n = e.hideSortableGhost,
                  r = e.onSortOver,
                  o = this.containerScrollDelta,
                  i = this.windowScrollDelta,
                  a = this.manager.getOrderedRefs(),
                  s = this.offsetEdge.left + this.translate.x + o.left,
                  l = this.offsetEdge.top + this.translate.y + o.top,
                  c = this.manager.isKeySorting,
                  u = this.newIndex;
                this.newIndex = null;
                for (var f = 0, d = a.length; f < d; f++) {
                  var h = a[f].node,
                    p = h.sortableInfo.index,
                    y = h.offsetWidth,
                    g = h.offsetHeight,
                    v = this.height > g ? g / 2 : this.height / 2,
                    m = this.width > y ? y / 2 : this.width / 2,
                    x = c && p > this.index && p <= u,
                    b = c && p < this.index && u <= p,
                    w = {x: 0, y: 0},
                    S = a[f].edgeOffset;
                  S ||
                    ((S = _(h, this.container)),
                    (a[f].edgeOffset = S),
                    c && (a[f].boundingClientRect = K(h, o)));
                  var O = f < a.length - 1 && a[f + 1],
                    C = 0 < f && a[f - 1];
                  O &&
                    !O.edgeOffset &&
                    ((O.edgeOffset = _(O.node, this.container)),
                    c && (O.boundingClientRect = K(O.node, o))),
                    p !== this.index
                      ? (t && M(h, t),
                        this.axis.x
                          ? this.axis.y
                            ? b ||
                              (p < this.index &&
                                ((s + i.left - m <= S.left &&
                                  l + i.top <= S.top + v) ||
                                  l + i.top + v <= S.top))
                              ? ((w.x = this.width + this.marginOffset.x),
                                S.left + w.x >
                                  this.containerBoundingRect.width - m &&
                                  O &&
                                  ((w.x = O.edgeOffset.left - S.left),
                                  (w.y = O.edgeOffset.top - S.top)),
                                null === this.newIndex && (this.newIndex = p))
                              : (x ||
                                  (p > this.index &&
                                    ((s + i.left + m >= S.left &&
                                      l + i.top + v >= S.top) ||
                                      l + i.top + v >= S.top + g))) &&
                                ((w.x = -(this.width + this.marginOffset.x)),
                                S.left + w.x <
                                  this.containerBoundingRect.left + m &&
                                  C &&
                                  ((w.x = C.edgeOffset.left - S.left),
                                  (w.y = C.edgeOffset.top - S.top)),
                                (this.newIndex = p))
                            : x || (p > this.index && s + i.left + m >= S.left)
                            ? ((w.x = -(this.width + this.marginOffset.x)),
                              (this.newIndex = p))
                            : (b ||
                                (p < this.index && s + i.left <= S.left + m)) &&
                              ((w.x = this.width + this.marginOffset.x),
                              null == this.newIndex && (this.newIndex = p))
                          : this.axis.y &&
                            (x || (p > this.index && l + i.top + v >= S.top)
                              ? ((w.y = -(this.height + this.marginOffset.y)),
                                (this.newIndex = p))
                              : (b ||
                                  (p < this.index && l + i.top <= S.top + v)) &&
                                ((w.y = this.height + this.marginOffset.y),
                                null == this.newIndex && (this.newIndex = p))),
                        N(h, w),
                        (a[f].translate = w))
                      : n &&
                        A((this.sortableGhost = h), {
                          opacity: 0,
                          visibility: 'hidden',
                        });
                }
                null == this.newIndex && (this.newIndex = this.index),
                  c && (this.newIndex = u);
                var T = c ? this.prevIndex : u;
                r &&
                  this.newIndex !== T &&
                  r({
                    collection: this.manager.active.collection,
                    index: this.index,
                    newIndex: this.newIndex,
                    oldIndex: T,
                    isKeySorting: c,
                    nodes: a,
                    helper: this.helper,
                  });
              },
            },
            {
              key: 'getWrappedInstance',
              value: function() {
                return (
                  S(
                    o.withRef,
                    'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableContainer() call',
                  ),
                  this.refs.wrappedInstance
                );
              },
            },
            {
              key: 'getContainer',
              value: function() {
                var e = this.props.getContainer;
                return 'function' != typeof e
                  ? s.findDOMNode(this)
                  : e(o.withRef ? this.getWrappedInstance() : void 0);
              },
            },
            {
              key: 'render',
              value: function() {
                var e = o.withRef ? 'wrappedInstance' : null;
                return i.createElement(t, l({ref: e}, E(this.props, oe)));
              },
            },
            {
              key: 'helperContainer',
              get: function() {
                var e = this.props.helperContainer;
                return 'function' == typeof e
                  ? e()
                  : this.props.helperContainer || this.document.body;
              },
            },
            {
              key: 'containerScrollDelta',
              get: function() {
                return this.props.useWindowAsScrollContainer
                  ? {left: 0, top: 0}
                  : {
                      left:
                        this.scrollContainer.scrollLeft -
                        this.initialScroll.left,
                      top:
                        this.scrollContainer.scrollTop - this.initialScroll.top,
                    };
              },
            },
            {
              key: 'windowScrollDelta',
              get: function() {
                return {
                  left:
                    this.contentWindow.pageXOffset -
                    this.initialWindowScroll.left,
                  top:
                    this.contentWindow.pageYOffset -
                    this.initialWindowScroll.top,
                };
              },
            },
          ]),
          r
        );
      })(i.Component)),
      w(e, 'displayName', H('sortableList', t)),
      w(e, 'defaultProps', re),
      w(e, 'propTypes', te),
      w(e, 'childContextTypes', {manager: a.object.isRequired}),
      n
    );
  }
  function ce(r) {
    var o = (function() {
      if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
      if (Reflect.construct.sham) return !1;
      if ('function' == typeof Proxy) return !0;
      try {
        return (
          Date.prototype.toString.call(
            Reflect.construct(Date, [], function() {}),
          ),
          !0
        );
      } catch (e) {
        return !1;
      }
    })();
    return function() {
      var e,
        t = x(r);
      if (o) {
        var n = x(this).constructor;
        e = Reflect.construct(t, arguments, n);
      } else e = t.apply(this, arguments);
      return m(this, e);
    };
  }
  var ue = {
      index: a.number.isRequired,
      collection: a.oneOfType([a.number, a.string]),
      disabled: a.bool,
    },
    fe = Object.keys(ue);
  function de(r) {
    var e,
      t,
      o =
        1 < arguments.length && void 0 !== arguments[1]
          ? arguments[1]
          : {withRef: !1};
    return (
      (t = e = (function(e) {
        g(n, e);
        var t = ce(n);
        function n() {
          return f(this, n), t.apply(this, arguments);
        }
        return (
          h(n, [
            {
              key: 'componentDidMount',
              value: function() {
                this.register();
              },
            },
            {
              key: 'componentDidUpdate',
              value: function(e) {
                this.node &&
                  (e.index !== this.props.index &&
                    (this.node.sortableInfo.index = this.props.index),
                  e.disabled !== this.props.disabled &&
                    (this.node.sortableInfo.disabled = this.props.disabled)),
                  e.collection !== this.props.collection &&
                    (this.unregister(e.collection), this.register());
              },
            },
            {
              key: 'componentWillUnmount',
              value: function() {
                this.unregister();
              },
            },
            {
              key: 'register',
              value: function() {
                var e = this.props,
                  t = e.collection,
                  n = e.disabled,
                  r = e.index,
                  o = s.findDOMNode(this);
                (o.sortableInfo = {
                  collection: t,
                  disabled: n,
                  index: r,
                  manager: this.context.manager,
                }),
                  (this.node = o),
                  (this.ref = {node: o}),
                  this.context.manager.add(t, this.ref);
              },
            },
            {
              key: 'unregister',
              value: function() {
                var e =
                  0 < arguments.length && void 0 !== arguments[0]
                    ? arguments[0]
                    : this.props.collection;
                this.context.manager.remove(e, this.ref);
              },
            },
            {
              key: 'getWrappedInstance',
              value: function() {
                return (
                  S(
                    o.withRef,
                    'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableElement() call',
                  ),
                  this.refs.wrappedInstance
                );
              },
            },
            {
              key: 'render',
              value: function() {
                var e = o.withRef ? 'wrappedInstance' : null;
                return i.createElement(r, l({ref: e}, E(this.props, fe)));
              },
            },
          ]),
          n
        );
      })(i.Component)),
      w(e, 'displayName', H('sortableElement', r)),
      w(e, 'contextTypes', {manager: a.object.isRequired}),
      w(e, 'propTypes', ue),
      w(e, 'defaultProps', {collection: 0}),
      t
    );
  }
  (e.SortableContainer = le),
    (e.SortableElement = de),
    (e.SortableHandle = Q),
    (e.arrayMove = function(e, t, n) {
      return (
        (e = e.slice()).splice(n < 0 ? e.length + n : n, 0, e.splice(t, 1)[0]),
        e
      );
    }),
    (e.sortableContainer = le),
    (e.sortableElement = de),
    (e.sortableHandle = Q),
    Object.defineProperty(e, '__esModule', {value: !0});
});
